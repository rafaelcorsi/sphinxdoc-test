Nessa entrega iremos melhorar o perif√©rico rec√©m criado, adicionando
mais funcionalidades a ele (pelo menos as necess√°rias).

Modifica√ß√µes:

-  Criar um registrador de configura√ß√£o: ``REG_CONFIG`` onde deve ser
   poss√≠vel ativar ou n√£o o controle de um pino
-  Permitir que um pino seja configur√°vel como IN ou OUT pelo
   registrador ``REG_SET_OUTPUT``
-  Gerar interrup√ß√£o

1. registrador de configura√ß√£o: ``REG_CONFIG``
2. 

(OLD) 2018-1
============

   üëâ semestre passado cada aluno teve que desenvolver um perif√©rico para
   um hardware externo a FPGA, por diversas raz√µes eles gastaram muito
   tempo nisso, nesse semestre eu quero facilitar um pouco para que
   possamos avan√ßar em outras coisas, vou deixar a entrega aqui de
   refer√™ncia para voc√™s verem o que foi feito!!!

Criar um IP dedicado para interfacear com um hardware externo a FPGA,
cada aluno (ou dupla) dever√° escolher um perif√©rico e criar tanto o
componente em HDL que conecta-se ao barramento Avalon quanto uma camada
de abstra√ß√£o de hardware (especificada a seguir) para comandar esse
perif√©rico.

Os perif√©ricos que podem ser escolhidos s√£o:

-  ‚òê `Teclado matricial de membrana 12
   teclas <https://www.filipeflop.com/produto/teclado-matricial-de-membrana-12-teclas/>`__

   -  Sabrina

-  ‚òí `Motor de
   passo <https://www.filipeflop.com/produto/motor-de-passo-driver-uln2003-arduino/>`__:

   -  Implementado por:
      `Gustavo <https://github.com/gustavoefeiche/AES/>`__ /
      `Astur <Https://github.com/lucassa3/EmbarcadosAvancados>`__

-  ‚òí `Motor DC com ponte
   H <https://www.filipeflop.com/produto/mini-motor-dc-3v/>`__

   -  Implementado por:
      `Cunial <https://github.com/pedrocunial/EmbarcadosAvancados>`__

-  ‚òí `Sensor ultrass√¥nico
   HC-SR04 <https://www.filipeflop.com/produto/sensor-de-distancia-ultrassonico-hc-sr04/>`__

   -  Implementado por:
      `Raphael <https://github.com/raphacosta27/entregasEmbAvancados-Rapha>`__

-  ‚òí `Encoder rotacional KY
   040 <https://www.filipeflop.com/produto/encoder-decoder-ky-040-rotacional/>`__

   -  Implementado por: **Marcelo**

-  ‚òê `Sensor de temperatura e umidade
   AM2302 <https://www.filipeflop.com/produto/sensor-de-umidade-e-temperatura-am2302-dht22/>`__:

Driver software
---------------

-  https://www.intel.com/content/www/us/en/programmable/documentation/iga1430779693885.html
-  https://www.intel.com/content/dam/altera-www/global/ja_JP/pdfs/literature/hb/nios2/n2sw_nii52003.pdf

Para cada sensor deve ser desenvolvido um driver capaz de interagir com
o perif√©rico. Iremos padronizar algumas fun√ß√µes a fim de definirmos um
padr√£o de interface:

.. code:: c

   int NAME_init( ..... );          // Inicializa o perif√©rico
   int NAME_config( ..... );        // Configura o perif√©rico 
   int NAME_halt( ..... );          // Desativa o perif√©rico 
   int NAME_en_irq( ..... );        // Habilita interrup√ß√£o
   int NAME_disable_irq( ..... );   // Desabilita interrup√ß√£o
   int NAME_read_xxxxx( ..... );    // read data xxxx from device
   int NAME_write_xxxxx( ..... );   // write data to xxxx device

Esse driver deve estar distribu√≠do em dois arquivos: ``NAME.c`` e
``NAME.h``.

Rubricas gerais do projeto:
---------------------------

-  **I**

   -  N√£o entregou

-  **D**

   -  Entregou o tutorial

-  **C (individual)**

   -  Fornecido exemplo que utiliza o perif√©rico
   -  Desenvolvido biblioteca em C para abstra√ß√£o do perif√©rico (de
      acordo com documenta√ß√£o)
   -  Perif√©rico possui registrador de configura√ß√£o que o possibilita
      ligar e desligar
   -  

      -  rubrica espec√≠fica

-  **B (individual) / C (dupla)**

   -  rubrica espec√≠fica

-  **A (individual) / B (dupla)**

   -  um item da rubrica espec√≠fica

-  **A+ (individual/dupla)**

   -  dois itens do A

Sensores
========

Detalhamento dos sensores e das rubricas.

Teclado matricial
-----------------

|image0|

O perif√©rico deve fazer a varredura autom√°tica das teclas e gravar em um
registrador o √∫ltimo valor referente ao bot√£o pressionado.

Rubrica:

-  C

   -  Perif√©rico faz varredura das teclas e salva bot√£o em registrador

-  B

   -  Sempre que uma tecla nova for detectada, gera uma interrup√ß√£o

-  A

   -  Suporta diferentes configura√ß√µes (frequ√™ncia de varredura,
      diferentes teclados: 12, 16, ‚Ä¶)
   -  Implementa debouncing
   -  Armazena um vetor de teclas pressionadas

Motor de passo
--------------

|image1|

O perif√©rico deve receber uma quantidade de pulsos e dire√ß√£o e realizar
o controle das fases do motor de passo a fim de realizar tal opera√ß√£o.

Rubrica:

-  C

   -  Aciona motor com base em passos fornecidos

-  B

   -  Sempre que uma a√ß√£o de movimenta√ß√£o for finalizada, gera uma
      interrup√ß√£o.

-  A

   -  Velocidade de rota√ß√£o √© configur√°vel
   -  Perif√©rico pode ser acionado tanto por passos quanto por graus

Motor DC (Ponte H)
------------------

|image2|

O perif√©rico deve controlar a velocidade e dire√ß√£o de um motor DC
modulando um sinal PWM. Esse perif√©rico deve ser capaz de receber um
valor de duty cycle, esse motor deve ficar acionado por um tempo
determinado.

Rubrica:

-  C

   -  Aciona motor com base em duty cycle e dire√ß√£o fornecido.
   -  Possui um timer interno que especifica por quanto tempo o motor
      ficar√° acionado.

-  B

   -  Gera uma interrup√ß√£o quando o timer estourar.

-  A (um item)

   -  Implementa um controle em `malha
      aberta <https://en.wikipedia.org/wiki/Open-loop_controller>`__.

HC
--

|image3|

Faz a leitura da dist√¢ncia de um objeto gerando o sinal de trigger no
m√≥dulo e lendo o tempo de resposta para o echo. Deve possuir dois modos:
Leitura peri√≥dica / Single shot.

Rubrica:

-  C

   -  Armazena em um registrador o valor do tempo da chegada do echo
      dado o inicio do trigger
   -  Possui dois modos de opera√ß√£o: Peri√≥dico / Single shot
   -  Per√≠odo deve ser configur√°vel por reg.

-  B

   -  Gera interrup√ß√£o a cada nova leitura

-  A

   -  Armazena a dist√¢ncia em metros, n√£o o tempo percorrido.
   -  Armazena um buffer de leituras.
   -  Filtra os dados de leitura para remover ru√≠do

Encoder de quadratura rotacional
--------------------------------

|image4|

Contabiliza a leitura dos pulsos de um encoder de quadratura para um
valor, indicando o sentido de rota√ß√£o. Deve possuir uma maneira de zerar
a quantia de pulsos j√° contabilizada.

-  C

   -  Faz a leitura da quantidade de pulsos e a dire√ß√£o

-  B

   -  Gera interrup√ß√£o a cada novo pulso detecado

-  A

   -  Armazena a informa√ß√£o em graus
   -  Faz a leitura por quadratura (sobida e descida) para aumentar a
      resolu√ß√£o

Sensor de temperatura e umidade AM2302
======================================

|image5|

Perif√©rico respons√°vel por estabelecer comunica√ß√£o com o sensor AM2302 e
extrair dados de temperatura e umidade. Deve possuir dois modos de
opera√ß√£o: Peri√≥dico e Single Shot.

-  C

   -  Faz a leitura da temperatura e umidade
   -  Per√≠odo deve ser configur√°vel por reg.

-  B

   -  Dois modos de opera√ß√£o: Peri√≥dico / Single Shot
   -  Gera interrup√ß√£o a cada novo valor

-  A

   -  Valida checksum e gera erro caso detectado algo errado

.. |image0| image:: figs/entrega3/membrana12.jpg
   :width: 30.0%
.. |image1| image:: figs/entrega3/motorpasso.jpg
   :width: 30.0%
.. |image2| image:: figs/entrega3/motorDC.jpg
   :width: 30.0%
.. |image3| image:: figs/entrega3/hc.jpg
   :width: 30.0%
.. |image4| image:: figs/entrega3/ky040.jpg
.. |image5| image:: figs/entrega3/am2302.jpg

